
// vk
SequenceClass*
Seq(ActionBase* action,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}
// end - vk

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    TestEndPoint::ExpectBase* e86,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            e86,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    TestEndPoint::ExpectBase* e86,
    TestEndPoint::ExpectBase* e87,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            e86,
                            e87,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    TestEndPoint::ExpectBase* e86,
    TestEndPoint::ExpectBase* e87,
    TestEndPoint::ExpectBase* e88,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            e86,
                            e87,
                            e88,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    TestEndPoint::ExpectBase* e86,
    TestEndPoint::ExpectBase* e87,
    TestEndPoint::ExpectBase* e88,
    TestEndPoint::ExpectBase* e89,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            e86,
                            e87,
                            e88,
                            e89,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    TestEndPoint::ExpectBase* e86,
    TestEndPoint::ExpectBase* e87,
    TestEndPoint::ExpectBase* e88,
    TestEndPoint::ExpectBase* e89,
    TestEndPoint::ExpectBase* e90,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            e86,
                            e87,
                            e88,
                            e89,
                            e90,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    TestEndPoint::ExpectBase* e86,
    TestEndPoint::ExpectBase* e87,
    TestEndPoint::ExpectBase* e88,
    TestEndPoint::ExpectBase* e89,
    TestEndPoint::ExpectBase* e90,
    TestEndPoint::ExpectBase* e91,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            e86,
                            e87,
                            e88,
                            e89,
                            e90,
                            e91,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    TestEndPoint::ExpectBase* e86,
    TestEndPoint::ExpectBase* e87,
    TestEndPoint::ExpectBase* e88,
    TestEndPoint::ExpectBase* e89,
    TestEndPoint::ExpectBase* e90,
    TestEndPoint::ExpectBase* e91,
    TestEndPoint::ExpectBase* e92,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            e86,
                            e87,
                            e88,
                            e89,
                            e90,
                            e91,
                            e92,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    TestEndPoint::ExpectBase* e86,
    TestEndPoint::ExpectBase* e87,
    TestEndPoint::ExpectBase* e88,
    TestEndPoint::ExpectBase* e89,
    TestEndPoint::ExpectBase* e90,
    TestEndPoint::ExpectBase* e91,
    TestEndPoint::ExpectBase* e92,
    TestEndPoint::ExpectBase* e93,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            e86,
                            e87,
                            e88,
                            e89,
                            e90,
                            e91,
                            e92,
                            e93,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    TestEndPoint::ExpectBase* e86,
    TestEndPoint::ExpectBase* e87,
    TestEndPoint::ExpectBase* e88,
    TestEndPoint::ExpectBase* e89,
    TestEndPoint::ExpectBase* e90,
    TestEndPoint::ExpectBase* e91,
    TestEndPoint::ExpectBase* e92,
    TestEndPoint::ExpectBase* e93,
    TestEndPoint::ExpectBase* e94,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            e86,
                            e87,
                            e88,
                            e89,
                            e90,
                            e91,
                            e92,
                            e93,
                            e94,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    TestEndPoint::ExpectBase* e86,
    TestEndPoint::ExpectBase* e87,
    TestEndPoint::ExpectBase* e88,
    TestEndPoint::ExpectBase* e89,
    TestEndPoint::ExpectBase* e90,
    TestEndPoint::ExpectBase* e91,
    TestEndPoint::ExpectBase* e92,
    TestEndPoint::ExpectBase* e93,
    TestEndPoint::ExpectBase* e94,
    TestEndPoint::ExpectBase* e95,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            e86,
                            e87,
                            e88,
                            e89,
                            e90,
                            e91,
                            e92,
                            e93,
                            e94,
                            e95,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    TestEndPoint::ExpectBase* e86,
    TestEndPoint::ExpectBase* e87,
    TestEndPoint::ExpectBase* e88,
    TestEndPoint::ExpectBase* e89,
    TestEndPoint::ExpectBase* e90,
    TestEndPoint::ExpectBase* e91,
    TestEndPoint::ExpectBase* e92,
    TestEndPoint::ExpectBase* e93,
    TestEndPoint::ExpectBase* e94,
    TestEndPoint::ExpectBase* e95,
    TestEndPoint::ExpectBase* e96,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            e86,
                            e87,
                            e88,
                            e89,
                            e90,
                            e91,
                            e92,
                            e93,
                            e94,
                            e95,
                            e96,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    TestEndPoint::ExpectBase* e86,
    TestEndPoint::ExpectBase* e87,
    TestEndPoint::ExpectBase* e88,
    TestEndPoint::ExpectBase* e89,
    TestEndPoint::ExpectBase* e90,
    TestEndPoint::ExpectBase* e91,
    TestEndPoint::ExpectBase* e92,
    TestEndPoint::ExpectBase* e93,
    TestEndPoint::ExpectBase* e94,
    TestEndPoint::ExpectBase* e95,
    TestEndPoint::ExpectBase* e96,
    TestEndPoint::ExpectBase* e97,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            e86,
                            e87,
                            e88,
                            e89,
                            e90,
                            e91,
                            e92,
                            e93,
                            e94,
                            e95,
                            e96,
                            e97,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    TestEndPoint::ExpectBase* e86,
    TestEndPoint::ExpectBase* e87,
    TestEndPoint::ExpectBase* e88,
    TestEndPoint::ExpectBase* e89,
    TestEndPoint::ExpectBase* e90,
    TestEndPoint::ExpectBase* e91,
    TestEndPoint::ExpectBase* e92,
    TestEndPoint::ExpectBase* e93,
    TestEndPoint::ExpectBase* e94,
    TestEndPoint::ExpectBase* e95,
    TestEndPoint::ExpectBase* e96,
    TestEndPoint::ExpectBase* e97,
    TestEndPoint::ExpectBase* e98,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            e86,
                            e87,
                            e88,
                            e89,
                            e90,
                            e91,
                            e92,
                            e93,
                            e94,
                            e95,
                            e96,
                            e97,
                            e98,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    TestEndPoint::ExpectBase* e86,
    TestEndPoint::ExpectBase* e87,
    TestEndPoint::ExpectBase* e88,
    TestEndPoint::ExpectBase* e89,
    TestEndPoint::ExpectBase* e90,
    TestEndPoint::ExpectBase* e91,
    TestEndPoint::ExpectBase* e92,
    TestEndPoint::ExpectBase* e93,
    TestEndPoint::ExpectBase* e94,
    TestEndPoint::ExpectBase* e95,
    TestEndPoint::ExpectBase* e96,
    TestEndPoint::ExpectBase* e97,
    TestEndPoint::ExpectBase* e98,
    TestEndPoint::ExpectBase* e99,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            e86,
                            e87,
                            e88,
                            e89,
                            e90,
                            e91,
                            e92,
                            e93,
                            e94,
                            e95,
                            e96,
                            e97,
                            e98,
                            e99,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}

SequenceClass*
Seq(ActionBase* action,
    TestEndPoint::ExpectBase* e1,
    TestEndPoint::ExpectBase* e2,
    TestEndPoint::ExpectBase* e3,
    TestEndPoint::ExpectBase* e4,
    TestEndPoint::ExpectBase* e5,
    TestEndPoint::ExpectBase* e6,
    TestEndPoint::ExpectBase* e7,
    TestEndPoint::ExpectBase* e8,
    TestEndPoint::ExpectBase* e9,
    TestEndPoint::ExpectBase* e10,
    TestEndPoint::ExpectBase* e11,
    TestEndPoint::ExpectBase* e12,
    TestEndPoint::ExpectBase* e13,
    TestEndPoint::ExpectBase* e14,
    TestEndPoint::ExpectBase* e15,
    TestEndPoint::ExpectBase* e16,
    TestEndPoint::ExpectBase* e17,
    TestEndPoint::ExpectBase* e18,
    TestEndPoint::ExpectBase* e19,
    TestEndPoint::ExpectBase* e20,
    TestEndPoint::ExpectBase* e21,
    TestEndPoint::ExpectBase* e22,
    TestEndPoint::ExpectBase* e23,
    TestEndPoint::ExpectBase* e24,
    TestEndPoint::ExpectBase* e25,
    TestEndPoint::ExpectBase* e26,
    TestEndPoint::ExpectBase* e27,
    TestEndPoint::ExpectBase* e28,
    TestEndPoint::ExpectBase* e29,
    TestEndPoint::ExpectBase* e30,
    TestEndPoint::ExpectBase* e31,
    TestEndPoint::ExpectBase* e32,
    TestEndPoint::ExpectBase* e33,
    TestEndPoint::ExpectBase* e34,
    TestEndPoint::ExpectBase* e35,
    TestEndPoint::ExpectBase* e36,
    TestEndPoint::ExpectBase* e37,
    TestEndPoint::ExpectBase* e38,
    TestEndPoint::ExpectBase* e39,
    TestEndPoint::ExpectBase* e40,
    TestEndPoint::ExpectBase* e41,
    TestEndPoint::ExpectBase* e42,
    TestEndPoint::ExpectBase* e43,
    TestEndPoint::ExpectBase* e44,
    TestEndPoint::ExpectBase* e45,
    TestEndPoint::ExpectBase* e46,
    TestEndPoint::ExpectBase* e47,
    TestEndPoint::ExpectBase* e48,
    TestEndPoint::ExpectBase* e49,
    TestEndPoint::ExpectBase* e50,
    TestEndPoint::ExpectBase* e51,
    TestEndPoint::ExpectBase* e52,
    TestEndPoint::ExpectBase* e53,
    TestEndPoint::ExpectBase* e54,
    TestEndPoint::ExpectBase* e55,
    TestEndPoint::ExpectBase* e56,
    TestEndPoint::ExpectBase* e57,
    TestEndPoint::ExpectBase* e58,
    TestEndPoint::ExpectBase* e59,
    TestEndPoint::ExpectBase* e60,
    TestEndPoint::ExpectBase* e61,
    TestEndPoint::ExpectBase* e62,
    TestEndPoint::ExpectBase* e63,
    TestEndPoint::ExpectBase* e64,
    TestEndPoint::ExpectBase* e65,
    TestEndPoint::ExpectBase* e66,
    TestEndPoint::ExpectBase* e67,
    TestEndPoint::ExpectBase* e68,
    TestEndPoint::ExpectBase* e69,
    TestEndPoint::ExpectBase* e70,
    TestEndPoint::ExpectBase* e71,
    TestEndPoint::ExpectBase* e72,
    TestEndPoint::ExpectBase* e73,
    TestEndPoint::ExpectBase* e74,
    TestEndPoint::ExpectBase* e75,
    TestEndPoint::ExpectBase* e76,
    TestEndPoint::ExpectBase* e77,
    TestEndPoint::ExpectBase* e78,
    TestEndPoint::ExpectBase* e79,
    TestEndPoint::ExpectBase* e80,
    TestEndPoint::ExpectBase* e81,
    TestEndPoint::ExpectBase* e82,
    TestEndPoint::ExpectBase* e83,
    TestEndPoint::ExpectBase* e84,
    TestEndPoint::ExpectBase* e85,
    TestEndPoint::ExpectBase* e86,
    TestEndPoint::ExpectBase* e87,
    TestEndPoint::ExpectBase* e88,
    TestEndPoint::ExpectBase* e89,
    TestEndPoint::ExpectBase* e90,
    TestEndPoint::ExpectBase* e91,
    TestEndPoint::ExpectBase* e92,
    TestEndPoint::ExpectBase* e93,
    TestEndPoint::ExpectBase* e94,
    TestEndPoint::ExpectBase* e95,
    TestEndPoint::ExpectBase* e96,
    TestEndPoint::ExpectBase* e97,
    TestEndPoint::ExpectBase* e98,
    TestEndPoint::ExpectBase* e99,
    TestEndPoint::ExpectBase* e100,
    unsigned int hangAroundTimeMs)
{
   SequenceClass::CPUSequenceSetup();
   return new SequenceClass(-1, true, action,
                            e1,
                            e2,
                            e3,
                            e4,
                            e5,
                            e6,
                            e7,
                            e8,
                            e9,
                            e10,
                            e11,
                            e12,
                            e13,
                            e14,
                            e15,
                            e16,
                            e17,
                            e18,
                            e19,
                            e20,
                            e21,
                            e22,
                            e23,
                            e24,
                            e25,
                            e26,
                            e27,
                            e28,
                            e29,
                            e30,
                            e31,
                            e32,
                            e33,
                            e34,
                            e35,
                            e36,
                            e37,
                            e38,
                            e39,
                            e40,
                            e41,
                            e42,
                            e43,
                            e44,
                            e45,
                            e46,
                            e47,
                            e48,
                            e49,
                            e50,
                            e51,
                            e52,
                            e53,
                            e54,
                            e55,
                            e56,
                            e57,
                            e58,
                            e59,
                            e60,
                            e61,
                            e62,
                            e63,
                            e64,
                            e65,
                            e66,
                            e67,
                            e68,
                            e69,
                            e70,
                            e71,
                            e72,
                            e73,
                            e74,
                            e75,
                            e76,
                            e77,
                            e78,
                            e79,
                            e80,
                            e81,
                            e82,
                            e83,
                            e84,
                            e85,
                            e86,
                            e87,
                            e88,
                            e89,
                            e90,
                            e91,
                            e92,
                            e93,
                            e94,
                            e95,
                            e96,
                            e97,
                            e98,
                            e99,
                            e100,
                            hangAroundTimeMs, SequenceClass::CPUSequenceSet);
}


// Copyright 2005 Purplecomm, Inc
/*
  Copyright (c) 2005, PurpleComm, Inc. 
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification,
  are permitted provided that the following conditions are met:

  * Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
  * Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
  * Neither the name of PurpleComm, Inc. nor the names of its contributors may
    be used to endorse or promote products derived from this software without
    specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

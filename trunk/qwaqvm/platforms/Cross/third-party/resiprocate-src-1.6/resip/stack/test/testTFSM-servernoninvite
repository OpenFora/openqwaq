# Non-Invite from the transport
inject_wire
{
REGISTER sip:127.0.0.1 SIP/2.0
Via: SIP/2.0/UDP 127.0.0.1:1234;branch=z9hG4bK0000
Max-Forwards: 70
From: sip:A@inside.com;tag=12345
To: sip:A@inside.com
Call-ID: 0123456789@pc.inside.com
CSeq: 1 REGISTER
Contact: <sip:A@pc.inside.com>
Content-Length: 0

}

# See the REGISTER be passed up to the TU
expect_tu
{
method=REGISTER
timeout=1000
}

# Wait for the above to expire
delay
{
timeout=2000
}

# Inject a provisional response from the TU
inject_tu
{
SIP/2.0 100 Trying
Via: SIP/2.0/UDP 127.0.0.1:1234;branch=z9hG4bK0000
From: sip:A@inside.com;tag=12345
To: sip:A@inside.com
Call-ID: 0123456789@pc.inside.com
CSeq: 1 REGISTER
Content-Length: 0

}

# See the 100 Trying provisional response passed by the stack
expect_wire
{
status=100
timeout=1000
}

# Wait for the above to expire
delay
{
timeout=2000
}

# Retransmission of the REGISTER from the transport
inject_wire
{
REGISTER sip:127.0.0.1 SIP/2.0
Via: SIP/2.0/UDP 127.0.0.1:1234;branch=z9hG4bK0000
Max-Forwards: 70
From: sip:A@inside.com;tag=12345
To: sip:A@inside.com
Call-ID: 0123456789@pc.inside.com
CSeq: 1 REGISTER
Contact: <sip:A@pc.inside.com>
Content-Length: 0

}

# See the 100 Trying provisional response passed (cached by the stack)
expect_wire
{
status=100
timeout=1000
}

# Wait for the above to expire
delay
{
timeout=2000
}

inject_tu
{
SIP/2.0 200 OK
Via: SIP/2.0/UDP 127.0.0.1:1234;branch=z9hG4bK0000
From: sip:A@inside.com;tag=12345
To: sip:A@inside.com
Call-ID: 0123456789@pc.inside.com
CSeq: 1 REGISTER
Content-Length: 0

}

expect_wire
{
status=200
timeout=1000
}

delay
{
timeout=2000
}

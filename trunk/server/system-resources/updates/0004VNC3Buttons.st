'From Croquet1.0beta of 11 April 2006 [latest update: #1] on 28 July 2009 at 6:48:23 pm'!!QMainViewPlayer methodsFor: 'events' stamp: 'bgf 7/10/2009 09:08'!onBlueButtonDown: evt	<on: blueButtonDown>	view ifNotNil:[		view mouseDown: (evt copy setPosition: self pointerXY)	].! !!QMainViewPlayer methodsFor: 'events' stamp: 'bgf 7/10/2009 09:10'!onBlueButtonMove: evt	<on: blueButtonMove>	view ifNotNil:[		view mouseMove: (evt copy setPosition: self pointerXY)	].! !!QMainViewPlayer methodsFor: 'events' stamp: 'bgf 7/10/2009 09:08'!onBlueButtonUp: evt	<on: blueButtonUp>	view ifNotNil:[		view mouseUp: (evt copy setPosition: self pointerXY)	].! !!QMainViewPlayer methodsFor: 'events' stamp: 'bgf 7/10/2009 09:15'!onYellowButtonMove: evt	<on: yellowButtonMove>	view ifNotNil:[		view mouseMove: (evt copy setPosition: self pointerXY)	].! !!QPersonalVNCView methodsFor: 'events' stamp: 'bgf 7/10/2009 10:47'!encodeButtons: buttonMask	"Answer a RFB button mask equivalent to the Squeak buttonMask."	| buttons |	buttons := 0.	"IAN;s original used 			#((1 2) (2 0) (4 -2)) do:	 	 but all Qwaq images use 'swap mouse buttons'  so we exchange 	 the yellow and blue mappings."	#((1 1) (2 1) (4 -2)) do:		[:maskShift |		 buttons := buttons bitOr: ((buttonMask bitAnd: maskShift first) bitShift: maskShift second)].		^buttons! !!QwaqParticipantUI methodsFor: 'code updates' stamp: 'bgf 7/28/2009 16:31'!fixMainViewEvents	"Install the triggers for the patch's new event handlers."	viewPanel ifNotNil: [		QLogger logInfo: 'Installing 0004VNC3Buttons event handlers.'.		viewPanel startScript: #onBlueButtonDown: when: { viewPanel . #blueButtonDown }.		viewPanel startScript: #onBlueButtonMove: when: { viewPanel . #blueButtonMove }.		viewPanel startScript: #onBlueButtonUp: when: { viewPanel . #blueButtonUp }.		viewPanel startScript: #onYellowButtonMove: when: { viewPanel . #yellowButtonMove }.	].! !!RFBClientPainter methodsFor: 'private' stamp: 'bgf 7/28/2009 18:46'!encodeButtons: buttonMask	"Answer a RFB button mask equivalent to the Squeak buttonMask."	| buttons |	buttons := 0.	"IAN;s original used 			#((1 2) (2 0) (4 -2)) do:	 but all Qwaq images use 'swap mouse buttons'  so we exchange 	 the yellow and blue mappings."	#((1 1) (2 1) (4 -2)) do:		[:maskShift |		 buttons := buttons bitOr: ((buttonMask bitAnd: maskShift first) bitShift: maskShift second)].	^buttons! !!TViewPane methodsFor: 'ui-events' stamp: 'bgf 7/21/2009 21:49'!mouseMove: evt	|  newCameraTransform type |	self readyForEvents ifFalse: [ ^ self ].	self processPointerFor: evt.	type := (evt anyButtonPressed						ifTrue: [TFrame eventPointerDown] 						ifFalse: [TFrame eventPointerOver]).	self fillEvent: type withUserInputEvent: evt.	"Check/handle joystick-style mouse driving."	(self handleRightMouseForMove: evt) ifTrue:[ ^ self ].	eventPointer deliverPointerMotion:event curTask:self task.	"Check direct dispatch to underlying embedded application."	evt anyButtonPressed ifTrue: [		(self checkDirectMouseDispatch: evt toTarget: eventPointer selection frame) ifTrue: [ 			eventPointer pointerDownFlag ifTrue: [				avatar updateCamera: camera.				lastCameraTransform:= camera globalTransform copy.			].			^ self		]]. 	"The remaining are cases for while red (left) mouse button is down..."		(evt redButtonPressed and: [eventPointer pointerDownFlag]) ifTrue: [		avatar updateCamera: camera.			newCameraTransform := camera globalTransform copy.			eventPointer selectedRayTransform: eventPointer localTransform.			eventPointer isOverlay ifFalse:[				eventPointer selectedCameraTransform ifNotNil:[					eventPointer selectedCameraTransform: (						lastCameraTransform inverseByTranspose * 					 	  newCameraTransform * 						  eventPointer selectedCameraTransform ).				]			].			lastCameraTransform := newCameraTransform.			task doPointerMove: event.		]. ! !!QViewPane methodsFor: 'ui-events' stamp: 'bgf 7/28/2009 15:27'!handleRightMouseForMove: event2D	"If the yellow mouse is released during move,	 clear the drive mouse-cursor. "	(event2D yellowButtonChanged and: [event2D yellowButtonPressed not])  ifTrue: [		window owner viewPanel mouseCursor: (self task cursor).	].	"Is this 2D-event right (yellow) mouse down?	 Returns true if the event is handled here."	(event2D yellowButtonPressed and: [ self keyboardDriving ]) ifTrue: [		self mouseDrivingStart: event2D.		avatar rightMouseMove: event2D.		^ true	] ifFalse: [		self mouseDrivingStop: event2D.		event2D yellowButtonChanged ifTrue: [			avatar rightMouseUp: event2D.		].		^ false	].	! !!QViewPane methodsFor: 'ui-events' stamp: 'bgf 7/28/2009 15:29'!handleRightMouseForUp: event2D	"Is this 2D-event right (yellow) mouse release?	 Extended to set an indicator-cursor in the view."	(self keyboardDriving 		and: [event2D yellowButtonChanged ]		and: [event2D yellowButtonPressed not])	 ifTrue: [		self mouseDrivingStop: event2D.		eventPointer pointerDownFlag: false.		avatar rightMouseUp: event2D.		self owner viewPanel mouseCursor: (self task cursor).		^ true	].	^ false! !"The do-it installs the new event handlers into the already-extant Tweak UI."QwaqForumsUI lastInstance ifNotNil: [	     [		Processor activeIsland: CProjectIsland lastInstance.			  QwaqForumsUI lastInstance startScript: #fixMainViewEvents.			  ] ensure: [			    Processor activeIsland: nil			    ].	      		    ] ifNil: [ Transcript cr; show: 'Patching before UI exists.' ].
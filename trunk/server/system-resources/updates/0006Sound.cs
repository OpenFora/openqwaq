'From Croquet1.0beta of 11 April 2006 [latest update: #1] on 30 October 2009 at 4:15:54 pm'!!QSpeakerManager methodsFor: 'actions' stamp: 'jcg 10/30/2009 15:56'!updateAllPlayStates	speakers do: [:sp | sp updatePlayState].! !!QSoundDialog methodsFor: 'initialize' stamp: 'bgf 10/30/2009 16:08'!updateLevels	| level |	<ticking: 0.5>	"Set the level controls to the current system values (which may have changed externally)."	owner audioSession ifNotNilDo: [ :session|.		isExternalUpdate := true. 		inputThreshold value: (session microphone noiseThreshold // 10).		level := session microphone recordLevel.		self pauseScript: #onInputLevelChanged.		level >= 0 ifTrue: [inputLevel value: level].		self resumeScript: #onInputLevelChanged.		"#soundVolume is a left/right pair, but we always set them together.		If we try to be fancy by using #average, we get an epsilon difference,		resulting in repeated resetting."		level := SoundPlayer soundVolume first.		self pauseScript: #onOutputLevelChanged.		level >= 0 ifTrue: [outputLevel value:  level].		self resumeScript: #onOutputLevelChanged.		self waitTick. "let changes propagate before turning notification back on in next line"		isExternalUpdate := false. 		].	"Kludge alert:	RoundTripSound is always killed when transition to a new space. But that might complete while	the SoundDialog is displayed.  So we make sure things are consistent while ticking here."	(hearMeButton selected and: [owner roundTripSound isNil]) ifTrue: [		owner toggleRoundTripSound.		].	"These can be changed in preferences while the dialog is open."	openALButton selected = owner preferences useOpenAL ifFalse: [		openALButton selected: (owner preferences useOpenAL).		self onOpenALFire.		].! !!QSoundDialog methodsFor: 'events' stamp: 'bgf 10/30/2009 16:11'!onInputLevelChanged	| requested |	<on: valueChanged in: inputLevel>	"User-input has changed the input level scroll bar."	owner audioSession ifNil: [^self].	requested := inputLevel value.	owner audioSession microphone recordLevel: requested.	self sliderCheck: (requested - owner audioSession microphone recordLevel) abs < 0.1.! !!QSoundDialog methodsFor: 'events' stamp: 'bgf 10/30/2009 16:10'!onOutputLevelChanged	| requested |	"User-input has changed the output level scroll bar."	<on: valueChanged in: outputLevel>	owner audioSession ifNil: [^self].	"Set left and right together. See #updateLevels."	requested := outputLevel value.	SoundPlayer setVolumeLeft: requested volumeRight: requested.	owner playSoundEffect: #blip.	self sliderCheck: (requested - SoundPlayer soundVolume first) abs < 0.1.! !!QwaqAudioSession methodsFor: 'accessing' stamp: 'jcg 10/30/2009 15:59'!isRecordingSession: aBool	"True if the client is currently recording the session (in which case voice streams should not be paused even when mute etc)"	isRecordingSession == aBool ifTrue: [^self].	isRecordingSession := aBool.	self destroyRecorder.	isRecordingSession		ifTrue: [recorder := QAudioRecorder on: self]		ifFalse: [			"If we stopped recording because the user switched to another space,			 ensure that there is no spill-over from the previous space to this one."			speakerManager updateAllPlayStates		].! !
######################################################################

# include files from other directories.  right now, this is only the
# contrib directory, but there are a number that are there.  if we can
# move the rules out toward the edges, it will be easier for others to
# add elements.

######################################################################

ifeq ($(BUILD_SHARED_LIBS),yes)
ifeq ($(OSTYPE),Darwin)
LIBSUFFIX := dylib
else
LIBSUFFIX := so
endif
else
LIBSUFFIX := a
endif

ifeq ($(OSTYPE),FreeBSD)
  PTHREAD_LDFLAGS := -pthread
else
  PTHREAD_LIBNAME := pthread
endif

ifeq ($(OSTYPE),Solaris)
PTHREAD_LDFLAGS := --thread
endif

# This is a bit dodgy: MinGW doesn't provide pthreads. Applications
# are expected to use Windows threading constructs. So, to get
# things to work, we need to completely undefine any PTHREAD
# constructs under MinGW.
ifeq ($(OSTYPE),MinGW)
PTHREAD_LIBNAME :=
PTHREAD_LDFLAGS :=
endif

ifeq ($(USE_SSL),yes)
  OPENSSL_LIBNAME := ssl crypto
  OPENSSL_LDFLAGS :=
  OPENSSL_INCLUDEDIRS := 
  OPENSSL_LIBDIRS :=
  OPENSSL_DEFINES += USE_SSL

  ifeq ($(OSTYPE),MinGW)
      MINGW_OPENSSL_DIR    := /c/openssl
      OPENSSL_LIBNAME      := eay32
      OPENSSL_INCLUDEDIRS  := $(MINGW_OPENSSL_DIR)/include
      OPENSSL_LIBDIRS      := $(MINGW_OPENSSL_DIR)/lib/MinGW
      OPENSSL_LDLIBS_LAST  := $(MINGW_OPENSSL_DIR)/lib/MinGW/ssleay32.a
  endif

  ifneq ($(SSL_LOCATION),)
    OPENSSL_LIBNAME :=
    OPENSSL_LDFLAGS := -ldl
    OPENSSL_INCLUDEDIRS := $(SSL_LOCATION)/include
    OPENSSL_LDLIBS_LAST := $(SSL_LOCATION)/libssl.a
    OPENSSL_LDLIBS_LAST += $(SSL_LOCATION)/libcrypto.a
  endif

endif

ifeq ($(USE_SIGCOMP),yes)
    OPENSIGCOMP_LIBNAME     := opensigcomp
    OPENSIGCOMP_LIBDIRS     := $(SIGCOMP_BASEDIR)/lib
    OPENSIGCOMP_INCLUDEDIRS := $(SIGCOMP_BASEDIR)/include
    OPENSIGCOMP_DEFINES     := USE_SIGCOMP USE_POSIX_LOCKING
endif

ifeq ($(USE_DTLS),yes)
OPENSSL_DEFINES += USE_DTLS
endif

# This is useful if you are not using openssl in the normal location 
#OPENSSL_LDLIBS_LAST := /usr/local/ssl/lib/libssl.a /usr/local/ssl/lib/libcrypto.a
#OPENSSL_INCLUDEDIRS := /usr/local/ssl/include

SRTP_INCLUDEDIRS := $(ROOT)/contrib/srtp/include $(ROOT)/contrib/srtp/crypto/include/
SRTP_LIBDIRS := $(ROOT)/contrib/srtp/
SRTP_LIBNAME := srtp

ifeq ($(USE_MYSQL),yes)
MYSQL_LIBNAME :=  mysqlclient z m
MYSQL_DEFINES += USE_MYSQL
endif

# We can only use one of CARES or ARES, and to avoid mucking up all the
# packaging stuff, let's just swap one in for another since they are almost
# interchangeable anyway.  
ifeq ($(DNS_RESOLVER),resip-ares)
   ARES_INCLUDEDIRS := $(ROOT)/contrib/ares
   ARES_LIBDIRS := $(ROOT)/contrib/ares-build.$(OS_ARCH)
   ARES_LIBNAME := ares
   ARES_DEFINES := 
endif

ifeq ($(DNS_RESOLVER),c-ares)
   # The CARES_INCLUDEDIRS and CARES_LIBDIRS variables are set by configure in
   # Makefile.conf
   ARES_INCLUDEDIRS := $(CARES_INCLUDEDIRS)
   ARES_LIBDIRS := $(CARES_LIBDIRS)
   ARES_LIBNAME := cares
   ARES_DEFINES :=
endif

S2C_INCLUDEDIRS := $(ROOT)/p2p/s2c/s2c
S2C_LIBDIRS := $(ROOT)/p2p/s2c/s2c/obj.$(TARGET_NAME)
S2C_LIBNAME := s2c
S2C_DEFINES := 
S2C_DEPENDS := $(S2C_LIBDIRS)/$(S2C_LIBNAME).$(LIBSUFFIX)
$(S2C_DEPENDS): 
	$(MAKE) -C $(S2C_INCLUDEDIRS)


P2P_INCLUDEDIRS := $(ROOT)/p2p
P2P_LIBDIRS := $(ROOT)/p2p/obj.$(TARGET_NAME)
P2P_LIBNAME := p2p
P2P_DEFINES := 
P2P_DEPENDS := $(P2P_LIBDIRS)/$(P2P_LIBNAME).$(LIBSUFFIX)
$(P2P_DEPENDS): 
	$(MAKE) -C $(P2P_INCLUDEDIRS)


ifeq ($(OSTYPE),FreeBSD)
  DB42_LIBNAME := db-4.2
  DB4CXX_LIBNAME := db_cxx-4.2
endif

ifeq ($(OSTYPE),NetBSD)
DB42_LIBNAME := db4
DB4CXX_LIBNAME := db4_cxx
endif

ifeq ($(OSTYPE),Linux)
DB42_LIBNAME := db
DB4CXX_LIBNAME := db_cxx
endif

ifeq ($(OSTYPE),SunOS)
DB4CXX_INCLUDEDIRS := /opt/csw/bdb4/include
DB4CXX_LIBDIRS := /opt/csw/bdb44/lib
DB42_LIBNAME := db
DB4CXX_LIBNAME := db_cxx
endif

ifeq ($(OSTYPE),Darwin)
# Darwin ports uses these directors, fink does not 
  ifneq ($(wildcard /opt/local/lib/libdb-4.3.*),)
    DB4CXX_LIBDIRS += /opt/local/lib
    DB4CXX_INCLUDEDIRS += /opt/local/include
    DB42_LIBNAME := db-4.3
    DB4CXX_LIBNAME := db_cxx-4.3
  else
    DB4CXX_LIBDIRS += /opt/local/lib/db42
    DB4CXX_INCLUDEDIRS += /opt/local/include
    DB42_LIBNAME := db-4.2
    DB4CXX_LIBNAME := db_cxx-4.2
  endif
endif

ifeq ($(OSTYPE),MinGW)
MINGW_BDB_DIR       := $(ROOT)/contrib/db/build_win32
DB42_INCLUDEDIRS    := $(MINGW_BDB_DIR)
DB42_LIBDIRS        := $(MINGW_BDB_DIR)
DB42_LIBNAME        := db-4.2
DB42_DEPENDS        := $(MINGW_BDB_DIR)/lib$(DB42_LIBNAME).a
DB4CXX_INCLUDEDIRS  := $(DB42_INCLUDEDIRS)
DB4CXX_LIBDIRS      := $(DB42_LIBDIRS)
DB4CXX_LIBNAME      := $(DB42_LIBNAME)
DB4CXX_DEPENDS      := $(DB42_DEPENDS)
$(MINGW_BDB_DIR)/%.a:
	$(MAKE) -C $(MINGW_BDB_DIR) -f Makefile.MinGW $*.a
endif

ifndef DB42_LIBNAME
DB42_LIBNAME := db-4.2
DB4CXX_LIBNAME := db_cxx-4.2
endif

ifeq ($(OSTYPE),MinGW)
    MINGW_PCRE_DIR    := $(ROOT)/contrib/pcre
    PCRE_INCLUDEDIRS  := $(MINGW_PCRE_DIR)
    PCRE_LIBDIRS      := $(MINGW_PCRE_DIR)
    PCRE_LIBNAME      := pcreposix pcre
    PCRE_DEPENDS      := $(MINGW_PCRE_DIR)/libpcreposix.a \
                         $(MINGW_PCRE_DIR)/libpcre.a
$(MINGW_PCRE_DIR)/%.a:
	$(MAKE) -C $(MINGW_PCRE_DIR) -f Makefile.MinGW $*.a
endif

ifeq ($(USE_CURL),yes)
CURL_LIBNAME := curl
CURL_DEFINES := USE_CURL
endif

RUTIL_INCLUDEDIRS := $(ROOT)
RUTIL_LIBDIRS := $(ROOT)/rutil/obj.$(TARGET_NAME) 
RUTIL_LIBNAME := rutil
RUTIL_DEPENDS := $(ROOT)/rutil/obj.$(TARGET_NAME)/librutil.$(LIBSUFFIX)
$(RUTIL_DEPENDS): 
	$(MAKE) -C $(ROOT)/rutil

RESIP_INCLUDEDIRS := $(ROOT)
RESIP_LIBDIRS := $(ROOT)/resip/stack/obj.$(TARGET_NAME) 
RESIP_LIBNAME := resip
RESIP_DEPENDS := $(ROOT)/resip/stack/obj.$(TARGET_NAME)/libresip.$(LIBSUFFIX)
$(RESIP_DEPENDS): 
	$(MAKE) -C $(ROOT)/resip/stack

DUM_LIBDIRS := $(ROOT)/resip/dum/obj.$(TARGET_NAME) 
DUM_LIBNAME := dum
DUM_DEPENDS := $(ROOT)/resip/dum/obj.$(TARGET_NAME)/libdum.$(LIBSUFFIX)
$(DUM_DEPENDS): 
	$(MAKE) -C $(ROOT)/resip/dum

REPRO_INCLUDEDIRS := $(ROOT)
REPRO_LIBDIRS := $(ROOT)/repro/obj.$(TARGET_NAME) 
REPRO_LIBNAME := repro
REPRO_LDFLAGS :=
REPRO_DEPENDS := $(ROOT)/repro/obj.$(TARGET_NAME)/librepro.$(LIBSUFFIX)
$(REPRO_DEPENDS): 
	$(MAKE) -C $(ROOT)/repro 

TFM_INCLUDEDIRS := $(ROOT)
TFM_LIBDIRS := $(ROOT)/tfm/obj.$(TARGET_NAME) 
TFM_LIBNAME := tfm
TFM_DEPENDS := $(ROOT)/tfm/obj.$(TARGET_NAME)/libtfm.$(LIBSUFFIX)
$(TFM_DEPENDS): 
	$(MAKE) -C $(ROOT)/tfm 

RETURNCLIENT_INCLUDEDIRS := $(ROOT)/reTurn
RETURNCLIENT_LIBDIRS := $(ROOT)/reTurn/client/obj.$(TARGET_NAME)
RETURNCLIENT_LIBNAME := reTurnClient
RETURNCLIENT_DEPENDS := $(ROOT)/reTurn/client/obj.$(TARGET_NAME)/libreTurnClient.$(LIBSUFFIX)
$(RETURNCLIENT_DEPENDS):
	$(MAKE) -C $(ROOT)/reTurn/client

REFLOW_INCLUDEDIRS := $(ROOT)/reflow
REFLOW_LIBDIRS := $(ROOT)/reflow/obj.$(TARGET_NAME)
REFLOW_LIBNAME := reflow
REFLOW_DEPENDS := $(ROOT)/reflow/obj.$(TARGET_NAME)/libreflow.$(LIBSUFFIX)
$(REFLOW_DEPENDS):
	$(MAKE) -C $(ROOT)/reflow

RECON_INCLUDEDIRS := $(ROOT)/resip/recon
RECON_LIBDIRS := $(ROOT)/resip/recon/obj.$(TARGET_NAME)
RECON_LIBNAME := recon
RECON_DEPENDS := $(ROOT)/resip/recon/obj.$(TARGET_NAME)/librecon.$(LIBSUFFIX)
$(RECON_DEPENDS):
	$(MAKE) -C $(ROOT)/resip/recon

# Use c-ares (external) or contrib/ares?
ifeq ($(DNS_RESOLVER),c-ares)
DEFINES += USE_CARES
endif
ifeq ($(DNS_RESOLVER),resip-ares)
DEFINES += USE_ARES
endif

ifeq ($(USE_IPV6),yes)
DEFINES += USE_IPV6
endif

ifeq ($(USE_POPT),yes)
  POPT_DEFINES := HAVE_POPT_H
  POPT_LIBNAME := popt
  ifneq ($(POPT_INCDIR_CONFIG),)
    POPT_INCLUDEDIRS := $(POPT_INCDIR_CONFIG)
  endif
  ifneq ($(POPT_LIBDIR_CONFIG),)
    POPT_LIBDIRS := $(POPT_LIBDIR_CONFIG)
  endif
endif

ifeq ($(RESIP_FIXED_POINT),yes)
DEFINES += RESIP_FIXED_POINT
endif

ifeq ($(PEDANTIC_STACK),yes)
DEFINES += PEDANTIC_STACK
endif

TFMLIBS_INCLUDEDIRS := $(ROOT)/tfm/contrib/Netxx-0.3.2/include $(ROOT)/tfm/contrib $(ROOT)/tfm/contrib/cppunit/include
TFMLIBS_LIBDIRS := $(ROOT)/tfm/contrib/Netxx-0.3.2/src $(ROOT)/tfm/contrib/cppunit/src/cppunit/.libs
TFMLIBS_LIBNAME :=  Netxx boost_regex cppunit

ifeq ($(OSTYPE),NetBSD)
TFMLIBS_INCLUDEDIRS += /usr/pkg/include/boost-1_31
endif

ifeq ($(OSTYPE),MinGW)
  MINGW_BOOST_DIR     := /c/Boost
  TFMLIBS_INCLUDEDIRS += $(MINGW_BOOST_DIR)/include/boost-1_33_1
  TFMLIBS_LIBNAME     := $(patsubst boost_regex, , $(TFMLIBS_LIBNAME))
  TFMLIBS_LDLIBS_LAST := $(MINGW_BOOST_DIR)/lib/libboost_regex-mgw-s.lib
endif

ifndef SIPX_ROOT
SIPX_ROOT := ../sipXtapi
endif

ifeq ($(SIPX_INSTALLED),yes)

SIPX_INCLUDEDIRS := $(SIPX_INCDIR)
#SIPX_LIBDIRS := $(SIPX_LIBDIR)
#SIPX_LIBNAME := sipXmediaProcessing sipXmedia sipXsdp sipXport
SIPX_LDLIBS_LAST := $(SIPX_LIBDIR)/libsipXmediaProcessing.a
SIPX_LDLIBS_LAST += $(SIPX_LIBDIR)/libsipXmedia.a
SIPX_LDLIBS_LAST += $(SIPX_LIBDIR)/libsipXsdp.a
SIPX_LDLIBS_LAST += $(SIPX_LIBDIR)/libsipXport.a
SIPX_LDFLAGS := -lpcre -lresolv -lrt
SIPX_DEFINES := __pingtel_on_posix__ DEFAULT_BRIDGE_MAX_IN_OUTPUTS=10

else

SIPX_ROOT := $(ROOT)/$(SIPX_ROOT)
SIPX_INCLUDEDIRS := $(SIPX_ROOT)/sipXmediaAdapterLib/sipXmediaMediaProcessing/include $(SIPX_ROOT)/sipXmediaAdapterLib/interface $(SIPX_ROOT)/sipXmediaLib/include $(SIPX_ROOT)/sipXtackLib/include  $(SIPX_ROOT)/sipXsdpLib/include $(SIPX_ROOT)/sipXportLib/include $(SIPX_ROOT)
#SIPX_LIBDIRS := $(SIPX_ROOT)/sipXmediaAdapterLib/sipXmediaMediaProcessing/src/.libs $(SIPX_ROOT)/sipXmediaLib/src/.libs $(SIPX_ROOT)/sipXtackLib/src/.libs $(SIPX_ROOT)/sipXsdpLib/src/.libs $(SIPX_ROOT)/sipXportLib/src/.libs
#SIPX_LIBNAME := sipXmediaProcessing sipXmedia sipXsdp sipXport
SIPX_LDLIBS_LAST := $(SIPX_ROOT)/sipXmediaAdapterLib/sipXmediaMediaProcessing/src/.libs/libsipXmediaProcessing.a
SIPX_LDLIBS_LAST += $(SIPX_ROOT)/sipXmediaLib/src/.libs/libsipXmedia.a
SIPX_LDLIBS_LAST += $(SIPX_ROOT)/sipXsdpLib/src/.libs/libsipXsdp.a
SIPX_LDLIBS_LAST += $(SIPX_ROOT)/sipXportLib/src/.libs/libsipXport.a
SIPX_LDFLAGS := -lpcre -lresolv -lrt
SIPX_DEFINES := __pingtel_on_posix__ DEFAULT_BRIDGE_MAX_IN_OUTPUTS=10

endif

BOOST_INCLUDEDIRS := $(BOOST_INCDIR_CONFIG)
BOOST_DEFINES := BOOST_ALL_NO_LIB

BOOSTSER_LIBNAME = boost_serialization boost_wserialization

ASIO_INCLUDEDIRS := $(ROOT)/contrib/asio

ifeq ($(USE_RADIUS_CLIENT),yes)
  RADIUSCLIENTNG_LIBNAME = radiusclient-ng
  DEFINES += USE_RADIUS_CLIENT
endif

##############################################################################
# 
# The Vovida Software License, Version 1.0 
# Copyright (c) 2000-2007 Vovida Networks, Inc.  All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 
# 3. The names "VOCAL", "Vovida Open Communication Application Library",
#    and "Vovida Open Communication Application Library (VOCAL)" must
#    not be used to endorse or promote products derived from this
#    software without prior written permission. For written
#    permission, please contact vocal@vovida.org.
# 
# 4. Products derived from this software may not be called "VOCAL", nor
#    may "VOCAL" appear in their name, without prior written
#    permission of Vovida Networks, Inc.
# 
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND
# NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL VOVIDA
# NETWORKS, INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT DAMAGES
# IN EXCESS OF $1,000, NOR FOR ANY INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
# DAMAGE.
# 
# ====================================================================
# 
# This software consists of voluntary contributions made by Vovida
# Networks, Inc. and many individuals on behalf of Vovida Networks,
# Inc.  For more information on Vovida Networks, Inc., please see
# <http://www.vovida.org/>.
# 
##############################################################################

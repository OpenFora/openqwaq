(| user pw |Utilities setAuthorInitials.user := UIManager default request: 'Unix user name'.pw := UIManager default requestPassword: 'Monticello password'.MCHttpRepository allSubInstancesDo: [ : rep |	rep user: user;	password: pw ].user = 'qwaq' ifTrue:	[MCFileBasedRepository flushAllCaches]).Utilities setAuthorInitials: ''.MCFileBasedRepository flushAllCaches.UsefulScripts generateChangeLog.UsefulScripts updateAllLoadedPackages.UsefulScripts revertAll.Undeclared removeUnreferencedKeys.Smalltalk condenseChanges"Add any other SharedPools whose constants you want to use in a Workspace."{OpenGLConstants. GLExtConstants} do: [:pool | Workspace addLookupPool: pool]Because Monticello doesn't handle shared pools well you may have to use the following to bind variables in shared pools correctly until Cog settles down: (doit below finds classes needing recompilation)(PackageInfo named: 'VMMaker') classes do:	[:c| Transcript cr; print: c; flush.		c recompileAll. c class recompileAll](Smalltalk allClasses select:	[:c| c sharedPools anySatisfy:		[:sp| (sp isBehavior ifTrue: [sp classPool] ifFalse: [sp]) keys anySatisfy: [:k| c classPool includesKey: k]]])This to force regeneration of all plugins(InterpreterPlugin withAllSubclassesDo:[:pl| pl touch])